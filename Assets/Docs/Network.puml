@startuml

set separator ::

namespace Network{
    namespace GameClient{
        class ClientInit <<MonoBehaviour>> {}
        class ExecuteOnMainthread <<MonoBehaviour>> {}
        class Client {}
        class Network {}
        ClientInit --> Client
        Client --> Network
        Network --> ExecuteOnMainthread
    }
    namespace GameServer{
        class ServerInit <<MonoBehaviour>> {}
        class Server{}
        class Network{}
        class ServerClient{}
        ServerInit --> Server
        Server --> ServerClient
        Server --> Network
        ServerClient --> Network
    }
    namespace Common{
        class Position{}
        class Batch{}
        class User{}
        class Projectile{}
        struct CONSTANTS <<static>> {
            + {static} int PORT
            + {static} Vector3 CameraOffset
            + {static} float Gravity
            + {static} float ProjectileSpeed
            + {static} float PlayerSpeed
            + {static} float JumpForce
        }
    }
}


namespace other{
    class Player <<MonoBehaviour>> {}
    class Weapon <<MonoBehaviour>> {}
    class GameController <<MonoBehaviour>> {}
}

Network::GameServer -- Network::Common
Network::GameClient -- Network::Common
Network::GameClient::Network --> other::GameController

note as N1
Network related classes and namespaces
Client and Server communicates via TCP sockets
and the DTO's in the Common namespace
end note



@enduml
