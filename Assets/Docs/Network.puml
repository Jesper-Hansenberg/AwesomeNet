@startuml

set separator ::

namespace Network{
    namespace GameClient{
        class Client {
            + Client(string ip, int port)
            + void Send(object obj)
            + void Send(byte[] bytes)
        }
        class Network {
            + ConcurrentQueue<Batch> ActionQueue
            + void Receive(object obj)
        }
    }
    namespace GameServer{
        class Server{
            + int Port
            + TcpListener TCPListener
            + List<ServerClient> Clients
            + Server(int port)
            + void Shutdown()
            + void Update()
        }
        class ServerClient{
            + TcpClient Socket
            + Network NetworkHandler
            + ServerClient(TcpClient socket)
            + bool IsConnected()
            + void Disconnect()
            + void Send(byte[] bytes)
            + object Deserialize(byte[] bytes)
            + byte[] Serialize(object obj)
        }
        class Network{
            + User UserRef
            + List<Projectile> Projectiles
            + Network(ServerClient serverClient)
            + void Receive(object obj)
            + void SendBatch(Batch batch)
            + void Send(User user)
            + void Send(Projectile projectile)
        }
    }
    namespace Common{
        class Position{}
        class Batch{}
        class User{}
        class Projectile{}
        struct CONSTANTS <<static>> {
            + {static} int PORT
            + {static} Vector3 CameraOffset
            + {static} float Gravity
            + {static} float ProjectileSpeed
            + {static} float PlayerSpeed
            + {static} float JumpForce
        }
    }
}


namespace other{
    class GameController <<MonoBehaviour>>{
        + void Awake()
        + void Start()
        + void Update()
        + void SetServer(Server server)
        + void SetClient(Client client)
        + Server GetServer()
        + Client GetClient()
        + void BatchUpdate(Batch batch)
    }
    class ClientInit <<MonoBehaviour>>{
        + string IP = "127.0.0.1"
        + int Port = 8052
        + {static} ClientInit Instance
        + void Awake()
        + void Send(object obj)
        # void FixedUpdate()
    }
    class ServerInit <<MonoBehaviour>>{
        + void Start()
        + void FixedUpdate()
        + void OnApplicationQuit()
    }
}

Network::Common -up- Network::GameClient::Client
Network::Common -up- Network::GameServer::Server
Network::GameServer::Server "1" *-- "*" Network::GameServer::ServerClient : Clients
Network::GameServer::ServerClient "1" *-- "1" Network::GameServer::Network : NetworkHandler
Network::GameClient::Client "1" *-up- "1" Network::GameClient::Network : NetworkHandler

other::GameController --> Network::GameClient::Network : Dequeue
other::ClientInit --> Network::GameClient::Client : Initialize
other::ServerInit --> Network::GameServer::Server : Initialize


@enduml
